[
    {
        "id": "7c_001",
        "q": "Which Terraform CLI command is commonly used to authenticate to Terraform Cloud?",
        "choices": [
            "terraform login",
            "terraform auth",
            "terraform init",
            "terraform connect"
        ],
        "answer": [0],
        "explain": "The `terraform login` command opens a browser to authenticate with Terraform Cloud and stores the token locally.",
        "tags": ["terraform", "cli", "login", "authentication", "cloud"],
        "difficulty": "easy",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_002",
        "q": "When using the 'terraform login' command, where are credentials stored by default?",
        "choices": [
            "In the .terraformrc or terraform.rc file",
            "In a local SQLite database",
            "In provider-specific credential files",
            "In environment variables"
        ],
        "answer": [0],
        "explain": "Terraform stores authentication tokens in the `.terraformrc` (Unix) or `terraform.rc` (Windows) file in the user's home directory.",
        "tags": ["terraform", "credentials", "terraformrc", "authentication"],
        "difficulty": "medium",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_003",
        "q": "Which environment variable can be used to authenticate to Terraform Cloud without interactive login?",
        "choices": [
            "TERRAFORM_TOKEN",
            "TF_CLOUD_TOKEN",
            "TF_TOKEN_app.terraform.io",
            "TERRAFORM_CLOUD_AUTH"
        ],
        "answer": [2],
        "explain": "The `TF_TOKEN_app.terraform.io` environment variable allows non-interactive authentication to Terraform Cloud.",
        "tags": ["terraform", "environment", "variables", "authentication", "cloud"],
        "difficulty": "hard",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_004",
        "q": "What type of authentication is typically required when using a remote backend on AWS S3?",
        "choices": [
            "OAuth token",
            "AWS access keys",
            "SSH key",
            "GPG key"
        ],
        "answer": [1],
        "explain": "AWS S3 backend requires AWS access keys (or IAM roles) for authentication to access the S3 bucket and DynamoDB table.",
        "tags": ["terraform", "backend", "s3", "aws", "authentication"],
        "difficulty": "easy",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_005",
        "q": "Which backend requires a service principal for authentication in Azure?",
        "choices": [
            "azurerm",
            "gcs",
            "s3",
            "local"
        ],
        "answer": [0],
        "explain": "The AzureRM backend requires a service principal with appropriate permissions to access Azure Blob Storage.",
        "tags": ["terraform", "backend", "azurerm", "azure", "service-principal"],
        "difficulty": "medium",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_006",
        "q": "What is the main benefit of authenticating with environment variables over storing credentials in configuration files?",
        "choices": [
            "Credentials are automatically encrypted",
            "Credentials are not stored in plain text",
            "Faster initialization",
            "Supports multiple backends"
        ],
        "answer": [1],
        "explain": "Environment variables prevent credentials from being stored in plain text files that might be committed to version control.",
        "tags": ["terraform", "authentication", "environment", "variables", "security"],
        "difficulty": "medium",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_007",
        "q": "In Google Cloud Storage backend, which environment variable stores the path to the credentials JSON file?",
        "choices": [
            "GOOGLE_CREDENTIALS",
            "GOOGLE_APPLICATION_CREDENTIALS",
            "GCP_KEY_PATH",
            "TF_GCP_AUTH"
        ],
        "answer": [1],
        "explain": "The `GOOGLE_APPLICATION_CREDENTIALS` environment variable points to the service account key JSON file for GCS backend authentication.",
        "tags": ["terraform", "backend", "gcs", "google", "authentication"],
        "difficulty": "easy",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_008",
        "q": "Which authentication method is recommended for CI/CD pipelines connecting to Terraform Cloud?",
        "choices": [
            "Manual terraform login",
            "Environment variable token",
            "Interactive OAuth",
            "SSH key authentication"
        ],
        "answer": [1],
        "explain": "Environment variable tokens are ideal for CI/CD pipelines as they provide non-interactive authentication without manual intervention.",
        "tags": ["terraform", "ci-cd", "pipeline", "authentication", "cloud"],
        "difficulty": "medium",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_009",
        "q": "When configuring the 'remote' backend for Terraform Cloud, what parameter specifies the organization name?",
        "choices": [
            "org",
            "organization",
            "workspace_org",
            "account"
        ],
        "answer": [1],
        "explain": "The `organization` parameter in the remote backend configuration specifies the Terraform Cloud organization name.",
        "tags": ["terraform", "backend", "remote", "cloud", "organization"],
        "difficulty": "medium",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    },
    {
        "id": "7c_010",
        "q": "Which authentication method is used when Terraform runs on an EC2 instance with an IAM role?",
        "choices": [
            "Instance metadata service",
            "Environment variables",
            "Configuration file",
            "Manual login"
        ],
        "answer": [0],
        "explain": "EC2 instances with IAM roles use the instance metadata service to automatically obtain temporary credentials.",
        "tags": ["terraform", "aws", "iam", "ec2", "authentication"],
        "difficulty": "medium",
        "focus": "7c",
        "category": "Authentication",
        "multiple": false
    }
]