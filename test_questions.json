[
  {
    "id": "test_001",
    "q": "Which of the following are Terraform workflow commands? (Select all that apply)",
    "choices": [
      "terraform init",
      "terraform plan",
      "terraform apply",
      "terraform destroy"
    ],
    "answer": [0, 1, 2, 3],
    "explain": "All four are core Terraform workflow commands: init, plan, apply, and destroy.",
    "tags": ["workflow", "basics", "commands"],
    "difficulty": "easy",
    "focus": "1.1",
    "category": "Terraform Workflow",
    "multiple": true
  },
  {
    "id": "test_002",
    "q": "What is the primary purpose of Terraform state?",
    "choices": [
      "To store variable values",
      "To map configuration to real resources",
      "To encrypt sensitive data",
      "To version control your code"
    ],
    "answer": [1],
    "explain": "Terraform state maps your configuration to real-world resources and stores their attributes.",
    "tags": ["state", "basics"],
    "difficulty": "medium",
    "focus": "1.2",
    "category": "State Management"
  },
  {
    "id": "test_003",
    "q": "Which of the following are valid Terraform variable types? (Select all that apply)",
    "choices": [
      "string",
      "number",
      "boolean",
      "list",
      "map",
      "object"
    ],
    "answer": [0, 1, 2, 3, 4, 5],
    "explain": "All of these are valid Terraform variable types. Terraform supports primitive types (string, number, bool) and complex types (list, map, object).",
    "tags": ["variables", "types", "hcl"],
    "difficulty": "hard",
    "focus": "2.2",
    "category": "Variables and Types",
    "multiple": true
  },
  {
    "id": "test_004",
    "q": "How do you reference a data source in Terraform?",
    "choices": [
      "data.resource_type.name.attribute",
      "resource_type.name.attribute",
      "var.resource_type.name",
      "local.resource_type.name"
    ],
    "answer": [0],
    "explain": "Data sources are referenced using the 'data.' prefix followed by the resource type, name, and attribute.",
    "tags": ["data-sources", "syntax", "hcl"],
    "difficulty": "medium",
    "focus": "5.1",
    "category": "Data Sources"
  },
  {
    "id": "test_005",
    "q": "Which meta-arguments can be used with both resources and modules? (Select all that apply)",
    "choices": [
      "count",
      "for_each",
      "depends_on",
      "lifecycle",
      "providers"
    ],
    "answer": [0, 1, 2],
    "explain": "count, for_each, and depends_on work with both resources and modules. lifecycle only works with resources, and providers is module-specific.",
    "tags": ["meta-arguments", "modules", "resources"],
    "difficulty": "hard",
    "focus": "3.2",
    "category": "Resource Management",
    "multiple": true
  }
]
